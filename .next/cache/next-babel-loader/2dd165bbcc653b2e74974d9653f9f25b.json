{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Table, Label, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\nimport { Router } from \"../routes\";\n\nclass Requestrow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: \"\",\n      isApprovalLoading: false,\n      isFinalizeLoading: false\n    };\n    this.approveHandler = this.approveHandler.bind(this);\n    this.finalizeHandler = this.finalizeHandler.bind(this);\n  }\n\n  async approveHandler() {\n    this.setState({\n      isApprovalLoading: true\n    });\n    const campaign = Campaign(this.props.address);\n    const accounts = await web3.eth.getAccounts();\n\n    try {\n      await campaign.methods.approveRequest(this.props.id - 1).send({\n        from: accounts[0]\n      });\n    } catch (error) {\n      this.setState({\n        message: error.message,\n        isApprovalLoading: false\n      });\n    }\n\n    this.setState({\n      isApprovalLoading: false\n    });\n    Router.pushRoute(`/campaigns/show/${this.props.address}/request`);\n  }\n\n  async finalizeHandler() {\n    this.setState({\n      isFinalizeLoading: true\n    });\n    const campaign = Campaign(this.props.address);\n    const accounts = await web3.eth.getAccounts();\n\n    try {\n      await campaign.methods.finalizeRequest(this.props.id - 1).send({\n        from: accounts[0]\n      });\n    } catch (error) {\n      this.setState({\n        message: error.message,\n        isFinalizeLoading: false\n      });\n    }\n\n    this.setState({\n      isFinalizeLoading: false\n    });\n    Router.pushRoute(`/campaigns/show/${this.props.address}/request`);\n  }\n\n  render() {\n    return __jsx(Table.Body, null, __jsx(Table.Row, null, __jsx(Table.Cell, null, __jsx(Label, null, this.props.id)), __jsx(Table.Cell, null, __jsx(Label, null, this.props.request.description)), __jsx(Table.Cell, null, __jsx(Label, null, this.props.request.value)), __jsx(Table.Cell, null, __jsx(Label, null, this.props.request.recipient)), __jsx(Table.Cell, null, __jsx(Label, null, this.props.request.approvalCount, \"/\", this.props.approversCount)), __jsx(Table.Cell, null, __jsx(Label, null, __jsx(Button, {\n      size: \"small\",\n      color: \"teal\",\n      onClick: this.approveHandler,\n      loading: this.state.isApprovalLoading\n    }, \"Yes\"))), this.props.manager === this.props.account ? __jsx(Table.Cell, null, __jsx(Label, null, __jsx(Button, {\n      size: \"small\",\n      color: \"green\",\n      onClick: this.finalizeHandler,\n      loading: this.state.isFinalizeLoading\n    }, \"Yes\"))) : null));\n  }\n\n}\n\nexport default Requestrow;","map":null,"metadata":{},"sourceType":"module"}