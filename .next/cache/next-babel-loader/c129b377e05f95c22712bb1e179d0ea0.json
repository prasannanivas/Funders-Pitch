{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Form, Button, Input, Message } from \"semantic-ui-react\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from '../../routes';\n\nclass Campaignnew extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minContribution: \"\",\n      projectTitle: '',\n      projectDescription: '',\n      projectpromise: '',\n      errorMessage: \"\",\n      isLoading: false\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  async onSubmit(evt) {\n    evt.preventDefault();\n    this.setState({\n      isLoading: true\n    });\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await factory.methods.createCampaign(this.state.minContribution, this.state.projectTitle, this.state.projectDescription, this.state.projectpromise).send({\n        from: accounts[0]\n      });\n      console.log(\"accounts\" + accounts[0]);\n      Router.pushRoute('/');\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message\n      });\n    }\n\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Form, {\n      className: \"text-center\",\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(\"div\", {\n      className: \"flex flex-wrap\"\n    }, __jsx(\"div\", {\n      className: \"w-4/5\"\n    }, __jsx(\"label\", {\n      className: \"font-extrabold text-2xl\"\n    }, \"Minimum contribution\"), __jsx(Input, {\n      type: \"number\",\n      required: true,\n      value: this.state.minContribution,\n      onChange: evt => {\n        this.setState({\n          minContribution: evt.target.value\n        });\n      },\n      label: \"wei\",\n      labelPosition: \"right\",\n      size: \"huge\"\n    })), __jsx(\"div\", {\n      className: \"w-4/5\"\n    }, __jsx(\"label\", {\n      className: \"font-extrabold text-2xl\"\n    }, \"Title\"), __jsx(Input, {\n      required: true,\n      value: this.state.projectTitle,\n      onChange: evt => {\n        this.setState({\n          projectTitle: evt.target.value\n        });\n      },\n      size: \"huge\"\n    })), __jsx(\"div\", {\n      className: \"w-4/5\"\n    }, __jsx(\"label\", {\n      className: \"font-extrabold text-2xl\"\n    }, \"Description\"), __jsx(Input, {\n      required: true,\n      value: this.state.projectDescription,\n      onChange: evt => {\n        this.setState({\n          projectDescription: evt.target.value\n        });\n      },\n      size: \"huge\"\n    })), __jsx(\"div\", {\n      className: \"w-4/5\"\n    }, __jsx(\"label\", {\n      className: \"font-extrabold text-2xl\"\n    }, \"My promise\"), __jsx(Input, {\n      required: true,\n      value: this.state.projectpromise,\n      onChange: evt => {\n        this.setState({\n          projectpromise: evt.target.value\n        });\n      },\n      size: \"huge\"\n    })), __jsx(\"div\", {\n      className: \"w-4/5 py-6\"\n    }, __jsx(Button, {\n      size: \"huge\",\n      color: \"teal\",\n      loading: this.state.isLoading\n    }, \"Create!\"))), __jsx(\"h1\", {\n      className: \"text-center font-bold text-2xl text-red-500 border-solid border-red-600\"\n    }, this.state.errorMessage))));\n  }\n\n}\n\nexport default Campaignnew;","map":null,"metadata":{},"sourceType":"module"}