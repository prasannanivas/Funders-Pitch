{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Button } from \"semantic-ui-react\";\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\n\nvar contributeForm = /*#__PURE__*/function (_Component) {\n  _inherits(contributeForm, _Component);\n\n  var _super = _createSuper(contributeForm);\n\n  function contributeForm(props) {\n    var _this;\n\n    _classCallCheck(this, contributeForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isloading: false,\n      value: '',\n      message: ''\n    };\n    _this.submitHandler = _this.submitHandler.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(contributeForm, [{\n    key: \"submitHandler\",\n    value: function () {\n      var _submitHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt) {\n        var campaign, accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                evt.preventDefault();\n                this.setState({\n                  isloading: true,\n                  message: 'Waiting for confirmation....'\n                });\n                campaign = Campaign(this.props.address);\n                _context.prev = 3;\n                _context.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                _context.next = 9;\n                return campaign.methods.contribute().send({\n                  from: accounts[0],\n                  value: web3.utils.toWei(this.state.value, 'ether')\n                });\n\n              case 9:\n                Router.replaceRoute(\"/campaigns/show/\".concat(this.props.address));\n                _context.next = 17;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](3);\n                console.log(_context.t0);\n                this.setState({\n                  message: _context.t0.message,\n                  isloading: false\n                });\n                return _context.abrupt(\"return\");\n\n              case 17:\n                this.setState({\n                  isloading: false,\n                  value: '',\n                  message: \"Thank you so much for contributing.  Thanks!\"\n                });\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 12]]);\n      }));\n\n      function submitHandler(_x) {\n        return _submitHandler.apply(this, arguments);\n      }\n\n      return submitHandler;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Form, {\n        onSubmit: this.submitHandler\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to contribute\"), __jsx(Input, {\n        type: \"decimal\",\n        label: \"ether\",\n        size: \"massive\",\n        value: this.state.value,\n        onChange: function onChange(evt) {\n          _this2.setState({\n            value: evt.target.value\n          });\n        },\n        labelPosition: \"right\"\n      }), __jsx(Button, {\n        color: \"olive\",\n        loading: this.state.isloading,\n        size: \"large\"\n      }, \"Contribute\"), __jsx(\"h1\", {\n        className: \"text-green-500 text-2xl font-bold\"\n      }, this.state.message)));\n    }\n  }]);\n\n  return contributeForm;\n}(Component);\n\nexport default contributeForm;","map":{"version":3,"sources":["/Users/prasannanivas/Desktop/Funding/components/contributeForm.js"],"names":["React","Component","Form","Input","Button","Campaign","web3","Router","contributeForm","props","state","isloading","value","message","submitHandler","bind","evt","preventDefault","setState","campaign","address","eth","getAccounts","accounts","methods","contribute","send","from","utils","toWei","replaceRoute","console","log","target"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,QAAoC,mBAApC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAAQC,MAAR,QAAqB,WAArB;;IACMC,c;;;;;AACF,0BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AAPc;AAQjB;;;;;qGACmBC,G;;;;;;AAChBA,gBAAAA,GAAG,CAACC,cAAJ;AACA,qBAAKC,QAAL,CAAc;AACVP,kBAAAA,SAAS,EAAC,IADA;AAEVE,kBAAAA,OAAO,EAAE;AAFC,iBAAd;AAIMM,gBAAAA,Q,GAAWd,QAAQ,CAAC,KAAKI,KAAL,CAAWW,OAAZ,C;;;uBAEEd,IAAI,CAACe,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;;uBACAJ,QAAQ,CAACK,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACrCC,kBAAAA,IAAI,EAAEJ,QAAQ,CAAC,CAAD,CADuB;AAErCX,kBAAAA,KAAK,EAAEN,IAAI,CAACsB,KAAL,CAAWC,KAAX,CAAiB,KAAKnB,KAAL,CAAWE,KAA5B,EAAmC,OAAnC;AAF8B,iBAAnC,C;;;AAINL,gBAAAA,MAAM,CAACuB,YAAP,2BAAuC,KAAKrB,KAAL,CAAWW,OAAlD;;;;;;;AAEAW,gBAAAA,OAAO,CAACC,GAAR;AACA,qBAAKd,QAAL,CAAc;AACVL,kBAAAA,OAAO,EAAE,YAAMA,OADL;AAEVF,kBAAAA,SAAS,EAAC;AAFA,iBAAd;;;;AAMJ,qBAAKO,QAAL,CAAc;AACVP,kBAAAA,SAAS,EAAC,KADA;AAEVC,kBAAAA,KAAK,EAAC,EAFI;AAGVC,kBAAAA,OAAO,EAAC;AAHE,iBAAd;;;;;;;;;;;;;;;;;;6BAOG;AAAA;;AACP,aACE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAI,KAAKC;AAAvB,SACE,MAAC,IAAD,CAAM,KAAN,QACE,4CADF,EAEE,MAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAC,OAA5B;AAAoC,QAAA,IAAI,EAAC,SAAzC;AAAmD,QAAA,KAAK,EAAI,KAAKJ,KAAL,CAAWE,KAAvE;AAA8E,QAAA,QAAQ,EAAI,kBAACI,GAAD,EAAQ;AAAC,UAAA,MAAI,CAACE,QAAL,CAAc;AAACN,YAAAA,KAAK,EAAGI,GAAG,CAACiB,MAAJ,CAAWrB;AAApB,WAAd;AAA0C,SAA7I;AAA+I,QAAA,aAAa,EAAC;AAA7J,QAFF,EAGE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAI,KAAKF,KAAL,CAAWC,SAA5C;AAAuD,QAAA,IAAI,EAAC;AAA5D,sBAHF,EAIA;AAAI,QAAA,SAAS,EAAG;AAAhB,SAAqD,KAAKD,KAAL,CAAWG,OAAhE,CAJA,CADF,CADF;AAUD;;;;EAlD0BZ,S;;AAqD7B,eAAeO,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form , Input ,Button} from \"semantic-ui-react\";\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport {Router} from '../routes';\nclass contributeForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isloading: false,\n            value: '',\n            message: '',\n        }\n        this.submitHandler = this.submitHandler.bind(this);\n    }\n    async submitHandler(evt){\n        evt.preventDefault();\n        this.setState({\n            isloading:true,\n            message: 'Waiting for confirmation....'\n        });\n        const campaign = Campaign(this.props.address);\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei(this.state.value, 'ether')\n            });\n            Router.replaceRoute(`/campaigns/show/${this.props.address}`);\n        } catch (error) {\n            console.log(error);\n            this.setState({\n                message: error.message,\n                isloading:false\n            })\n            return;\n        }\n        this.setState({\n            isloading:false,\n            value:'',\n            message:\"Thank you so much for contributing.  Thanks!\",\n        });\n\n    }\n  render() {\n    return (\n      <Form onSubmit = {this.submitHandler}>\n        <Form.Field >\n          <label>Amount to contribute</label>\n          <Input type=\"decimal\" label=\"ether\" size=\"massive\" value = {this.state.value} onChange = {(evt)=> {this.setState({value : evt.target.value})}} labelPosition=\"right\" />\n          <Button color=\"olive\" loading = {this.state.isloading} size=\"large\">Contribute</Button>\n        <h1 className = \"text-green-500 text-2xl font-bold\">{this.state.message}</h1>\n        </Form.Field>\n      </Form>\n    );\n  }\n}\n\nexport default contributeForm;\n"]},"metadata":{},"sourceType":"module"}