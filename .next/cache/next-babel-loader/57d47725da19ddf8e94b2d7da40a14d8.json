{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Campaign from \"../../ethereum/campaign\";\nimport { Link } from \"../../routes\";\nimport { Button, Table } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport RequestRow from \"../../components/Requestrow\";\n\nclass RequestIndex extends Component {\n  static async getInitialProps(props) {\n    console.log(\"this is \" + props.query.address);\n    const campaign = Campaign(props.query.address);\n    const requestcount = await campaign.methods.gatRequestsCount().call();\n    const approversCount = await campaign.methods.approversCount().call();\n    const requests = await Promise.all(Array(parseInt(requestcount)).fill().map((element, index) => {\n      return campaign.methods.requests(index).call();\n    }));\n    return {\n      address: props.query.address,\n      requests,\n      requestcount,\n      approversCount\n    };\n  }\n\n  renderRow() {\n    return this.props.requests.map((request, i) => {\n      return __jsx(RequestRow, {\n        key: i,\n        id: i + 1,\n        address: this.props.address,\n        approversCount: this.props.approversCount,\n        request: request\n      });\n    });\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body\n    } = Table;\n    return __jsx(Layout, null, __jsx(\"div\", {\n      className: \"text-center\"\n    }, __jsx(Link, {\n      route: `/campaigns/show/${this.props.address}/request/new`\n    }, __jsx(Button, {\n      size: \"massive\",\n      color: \"orange\"\n    }, \"New request +\")), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"ID\"), __jsx(HeaderCell, null, \"Description\"), __jsx(HeaderCell, null, \"Amount\"), __jsx(HeaderCell, null, \"Recipient\"), __jsx(HeaderCell, null, \"Approval Count\"), __jsx(HeaderCell, null, \"Approve\"), __jsx(HeaderCell, null, \"Finalize\"))), this.renderRow())));\n  }\n\n}\n\nexport default RequestIndex;","map":null,"metadata":{},"sourceType":"module"}