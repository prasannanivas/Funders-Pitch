{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Form, Input, Button } from \"semantic-ui-react\";\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\n\nclass contributeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isloading: false,\n      value: '',\n      message: ''\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  async submitHandler(evt) {\n    evt.preventDefault();\n    this.setState({\n      isloading: true,\n      message: 'Waiting for confirmation....'\n    });\n    const campaign = Campaign(this.props.address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.contribute().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, 'ether')\n      });\n      Router.replaceRoute(`/campaigns/show/${this.props.address}`);\n    } catch (error) {\n      console.log(error);\n    }\n\n    this.setState({\n      isloading: false,\n      value: '',\n      message: \"Thank you so much for contributing.  Thanks!\"\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.submitHandler\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to contribute\"), __jsx(Input, {\n      type: \"decimal\",\n      label: \"ether\",\n      size: \"massive\",\n      value: this.state.value,\n      onChange: evt => {\n        this.setState({\n          value: evt.target.value\n        });\n      },\n      labelPosition: \"right\"\n    }), __jsx(Button, {\n      color: \"olive\",\n      loading: this.state.isloading,\n      size: \"large\"\n    }, \"Contribute\"), __jsx(\"h1\", {\n      className: \"bg-green-500 text-2xl font-bold\"\n    }, this.state.message)));\n  }\n\n}\n\nexport default contributeForm;","map":{"version":3,"sources":["/Users/prasannanivas/Desktop/Funding/components/contributeForm.js"],"names":["React","Component","Form","Input","Button","Campaign","web3","Router","contributeForm","constructor","props","state","isloading","value","message","submitHandler","bind","evt","preventDefault","setState","campaign","address","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","replaceRoute","error","console","log","render","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,QAAoC,mBAApC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAAQC,MAAR,QAAqB,WAArB;;AACA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AACnCQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AACD,QAAMD,aAAN,CAAoBE,GAApB,EAAwB;AACpBA,IAAAA,GAAG,CAACC,cAAJ;AACA,SAAKC,QAAL,CAAc;AACVP,MAAAA,SAAS,EAAC,IADA;AAEVE,MAAAA,OAAO,EAAE;AAFC,KAAd;AAIA,UAAMM,QAAQ,GAAGf,QAAQ,CAAC,KAAKK,KAAL,CAAWW,OAAZ,CAAzB;;AACA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMhB,IAAI,CAACiB,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMJ,QAAQ,CAACK,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACrCC,QAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADuB;AAErCT,QAAAA,KAAK,EAAEP,IAAI,CAACuB,KAAL,CAAWC,KAAX,CAAiB,KAAKnB,KAAL,CAAWE,KAA5B,EAAmC,OAAnC;AAF8B,OAAnC,CAAN;AAIAN,MAAAA,MAAM,CAACwB,YAAP,CAAqB,mBAAkB,KAAKrB,KAAL,CAAWW,OAAQ,EAA1D;AACH,KAPD,CAOE,OAAOW,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AACD,SAAKb,QAAL,CAAc;AACVP,MAAAA,SAAS,EAAC,KADA;AAEVC,MAAAA,KAAK,EAAC,EAFI;AAGVC,MAAAA,OAAO,EAAC;AAHE,KAAd;AAMH;;AACHqB,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAI,KAAKpB;AAAvB,OACE,MAAC,IAAD,CAAM,KAAN,QACE,4CADF,EAEE,MAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,KAAK,EAAC,OAA5B;AAAoC,MAAA,IAAI,EAAC,SAAzC;AAAmD,MAAA,KAAK,EAAI,KAAKJ,KAAL,CAAWE,KAAvE;AAA8E,MAAA,QAAQ,EAAKI,GAAD,IAAQ;AAAC,aAAKE,QAAL,CAAc;AAACN,UAAAA,KAAK,EAAGI,GAAG,CAACmB,MAAJ,CAAWvB;AAApB,SAAd;AAA0C,OAA7I;AAA+I,MAAA,aAAa,EAAC;AAA7J,MAFF,EAGE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,OAAO,EAAI,KAAKF,KAAL,CAAWC,SAA5C;AAAuD,MAAA,IAAI,EAAC;AAA5D,oBAHF,EAIA;AAAI,MAAA,SAAS,EAAG;AAAhB,OAAmD,KAAKD,KAAL,CAAWG,OAA9D,CAJA,CADF,CADF;AAUD;;AA7CoC;;AAgDvC,eAAeN,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form , Input ,Button} from \"semantic-ui-react\";\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport {Router} from '../routes';\nclass contributeForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isloading: false,\n            value: '',\n            message: '',\n        }\n        this.submitHandler = this.submitHandler.bind(this);\n    }\n    async submitHandler(evt){\n        evt.preventDefault();\n        this.setState({\n            isloading:true,\n            message: 'Waiting for confirmation....'\n        });\n        const campaign = Campaign(this.props.address);\n        try {\n            const accounts = await web3.eth.getAccounts();\n            await campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei(this.state.value, 'ether')\n            });\n            Router.replaceRoute(`/campaigns/show/${this.props.address}`);\n        } catch (error) {\n            console.log(error)\n        }\n        this.setState({\n            isloading:false,\n            value:'',\n            message:\"Thank you so much for contributing.  Thanks!\",\n        });\n\n    }\n  render() {\n    return (\n      <Form onSubmit = {this.submitHandler}>\n        <Form.Field >\n          <label>Amount to contribute</label>\n          <Input type=\"decimal\" label=\"ether\" size=\"massive\" value = {this.state.value} onChange = {(evt)=> {this.setState({value : evt.target.value})}} labelPosition=\"right\" />\n          <Button color=\"olive\" loading = {this.state.isloading} size=\"large\">Contribute</Button>\n        <h1 className = \"bg-green-500 text-2xl font-bold\">{this.state.message}</h1>\n        </Form.Field>\n      </Form>\n    );\n  }\n}\n\nexport default contributeForm;\n"]},"metadata":{},"sourceType":"module"}